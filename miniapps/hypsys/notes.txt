ATTENTION


DEBUG


ROADMAP
   -euler w-c benchmark shows problem with mcl low order method
   -Change quadrature rules - read up on it/use int rules as in different operators in mfem. Hexes seem off as well.


CLEANUP
   -lib: check quadrature orders - other than that *tools* *lib.hpp is done
      TODO: (p-) bounds, dofs, massmat
   -fe_evol

TODO
   Minor Tasks
      Check if it is actually possible to make Gresho vortex converge to steady state (with galerkin first)
      Check apps/bl.cpp for correctness

   High Priority:
      Discrepancy to results in paper :( - already in 1D low order method, Woodward-Colella breaks
      Cleanup
      Efficiency

   Medium Priority:
      Advection - NodalQuadRule

   Low Priority:
      Test GMS for Euler, remove if unnecessary
      Try to run  MCL on curved geometries
      Vector output as arrows

   Desirable:
      -Euler: Implement subsonic in- and outflow.
      -Sedov setup
      -Theoretically, double-mach requires a subsonic outlet at the short edge before wall boundaries
      -Noh problem: zero verlocity part of bdr: wall, rest: supersonic outflow (east, north)
         and supersonic inflow (south, east), i.e.  bdr type changes in time
      -Expression for momentum in narrowing channel
      -If possible: Try to distinguish boundary types by considering eigenvalues of systems


next steps
   -Pressure fix: Required for Woodward-Colella, double-mach, Sedov, Noh

If possible: try to make advection with non-constant velocity and MCL work

minor tasks:
   -C++ type cleanup, e.g for DofInfo classes
   -Maybe move stuff thats not needed within main routines (e.g. dofs) into fe_evol.cpp
   -If difficult, move bound computation to MCL Evolution.
   -Use mfem::Mult for matrix multiplication
   -Since MCL works only for elements with constant Jacobians, maybe use Vector of size ne
   -Restructure galerkin, fe_evol and mcl (constructors)


future tasks
   -Entropy fixes
   -Smoothness indicator
